// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package runner

import (
	"sync"

	"github.com/balerter/balerter/internal/modules"
)

// storagesManagerMock is a mock implementation of storagesManager.
//
// 	func TestSomethingThatUsesstoragesManager(t *testing.T) {
//
// 		// make and configure a mocked storagesManager
// 		mockedstoragesManager := &storagesManagerMock{
// 			GetFunc: func() []modules.Module {
// 				panic("mock out the Get method")
// 			},
// 		}
//
// 		// use mockedstoragesManager in code that requires storagesManager
// 		// and then make assertions.
//
// 	}
type storagesManagerMock struct {
	// GetFunc mocks the Get method.
	GetFunc func() []modules.Module

	// calls tracks calls to the methods.
	calls struct {
		// Get holds details about calls to the Get method.
		Get []struct {
		}
	}
	lockGet sync.RWMutex
}

// Get calls GetFunc.
func (mock *storagesManagerMock) Get() []modules.Module {
	if mock.GetFunc == nil {
		panic("storagesManagerMock.GetFunc: method is nil but storagesManager.Get was just called")
	}
	callInfo := struct {
	}{}
	mock.lockGet.Lock()
	mock.calls.Get = append(mock.calls.Get, callInfo)
	mock.lockGet.Unlock()
	return mock.GetFunc()
}

// GetCalls gets all the calls that were made to Get.
// Check the length with:
//     len(mockedstoragesManager.GetCalls())
func (mock *storagesManagerMock) GetCalls() []struct {
} {
	var calls []struct {
	}
	mock.lockGet.RLock()
	calls = mock.calls.Get
	mock.lockGet.RUnlock()
	return calls
}
